package com.github.nailkhaf.web3.abi

import okio.ByteString.Companion.decodeHex
import okio.ByteString.Companion.encodeUtf8
import kotlin.test.Test
import kotlin.test.assertEquals

class EncodingTest {

    @Test
    fun `baz(uint32,bool)`() {

        val expected =
            "cdcd77c000000000000000000000000000000000000000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000001".decodeHex()
        val actual = TestContract.baz.encode(69u to true)
        assertEquals(expected, actual)
    }

    @Test
    fun `bar(bytes3(2))`() {
        val expected =
            "fce353f661626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000".decodeHex()
        val actual = TestContract.bar.encode(Pair("abc".encodeUtf8(), "def".encodeUtf8()))
        assertEquals(expected, actual)
    }

    @Test
    fun `sam(bytes,bool,uint256())`() {
        val expected =
            "a5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003".decodeHex()
        val actual = TestContract.sam.encode(Triple("dave".encodeUtf8(), true, listOf(1u, 2u, 3u)))
        assertEquals(expected, actual)
    }

    @Test
    fun `f(uint256,uint32(),bytes10,bytes)`() {
        val expected = ("8be65246" +
                "0000000000000000000000000000000000000000000000000000000000000123" +
                "0000000000000000000000000000000000000000000000000000000000000080" +
                "3132333435363738393000000000000000000000000000000000000000000000" +
                "00000000000000000000000000000000000000000000000000000000000000e0" +
                "0000000000000000000000000000000000000000000000000000000000000002" +
                "0000000000000000000000000000000000000000000000000000000000000456" +
                "0000000000000000000000000000000000000000000000000000000000000789" +
                "000000000000000000000000000000000000000000000000000000000000000d" +
                "48656c6c6f2c20776f726c642100000000000000000000000000000000000000").decodeHex()

        val actual = TestContract.f.encode(
            TestContract.FParams(
                0x123uL,
                listOf(0x456u, 0x789u),
                "1234567890".encodeUtf8(),
                "Hello, world!".encodeUtf8()
            )
        )

        assertEquals(expected, actual)
    }

    @Test
    fun `g(uint256()(),string())`() {
        val expected = ("2289b18c" +
                "0000000000000000000000000000000000000000000000000000000000000040" +
                "0000000000000000000000000000000000000000000000000000000000000140" +
                "0000000000000000000000000000000000000000000000000000000000000002" +
                "0000000000000000000000000000000000000000000000000000000000000040" +
                "00000000000000000000000000000000000000000000000000000000000000a0" +
                "0000000000000000000000000000000000000000000000000000000000000002" +
                "0000000000000000000000000000000000000000000000000000000000000001" +
                "0000000000000000000000000000000000000000000000000000000000000002" +
                "0000000000000000000000000000000000000000000000000000000000000001" +
                "0000000000000000000000000000000000000000000000000000000000000003" +
                "0000000000000000000000000000000000000000000000000000000000000003" +
                "0000000000000000000000000000000000000000000000000000000000000060" +
                "00000000000000000000000000000000000000000000000000000000000000a0" +
                "00000000000000000000000000000000000000000000000000000000000000e0" +
                "0000000000000000000000000000000000000000000000000000000000000003" +
                "6f6e650000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000003" +
                "74776f0000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000005" +
                "7468726565000000000000000000000000000000000000000000000000000000").decodeHex()

        val actual = TestContract.g.encode(
            listOf(listOf(1uL, 2uL), listOf(3uL)) to listOf(
                "one",
                "two",
                "three"
            )
        )
        assertEquals(expected, actual)
    }
}
